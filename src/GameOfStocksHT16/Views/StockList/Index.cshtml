@using GameOfStocksHT16.Models.UsersViewModels
@using Microsoft.AspNetCore.Identity


@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@{
    ViewData["Title"] = "Stock List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="section-padding-medium">
    <div class="container">
        <div class="panel">
            <div class="panel-body">
                <div class="table-responsive">
                    <table id="stock-table" class="table table-bordered table-hover table-striped table-condensed">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Change</th>
                                <th>Volume</th>
                                <th>Open</th>
                                <th>Days Low</th>
                                <th>Days High</th>
                                <th>Last Trade Price Only</th>
                                <th>Last Trade Time</th>
                                <th>Last Trade Date</th>
                                <th>Cap</th>
                            </tr>
                        </thead>
                        <tbody id="stock-table-body">
                            @* ROWS ARE FILLED WITH JS *@
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts
{
    <script type="text/javascript">
        $.get("../api/stocks",
            function (data) {
                var i = 0;
                $.each(data,
                    function () {
                        var html = "<tr >";
                        html += "" +
                            "<td class='buy-control'>" +
                            "<a href='' id=" +
                            this.label +
                            " class='stock-button' data-toggle='modal' data-target='.bs-example-modal-md'>" +
                            this.name +
                            "</a>" +
                            "</td>";

                        var changeColor;
                        if (parseFloat(this.change) / 100.0 > 0) {
                            changeColor = "green";
                        } else {
                            changeColor = "red";
                        }
                        if (parseFloat(this.change) / 100.0 == 0) {
                            changeColor = "";
                        }
                        html += "<td style='color:" + changeColor + "'><b>" + this.change + "</b></td>";
                        html += "<td>" + this.volume + "</td>";
                        html += "<td>" + this.open + "</td>";
                        html += "<td>" + this.daysLow + "</td>";
                        html += "<td>" + this.daysHigh + "</td>";
                        html += "<td class='last-trade-price'>" + this.lastTradePriceOnly + "</td>";
                        html += "<td>" + this.lastTradeTime + "</td>";
                        html += "<td>" + this.lastTradeDate + "</td>";
                        html += "<td>" + this.cap + "</td>";
                        html += "</tr>";

                        $('#stock-table-body').append(html);
                    });

                var table = $('#stock-table')
                    .DataTable({
                        "iDisplayLength": 50
                    });
                table.rows().every(function () {
                    var label = $(table.row(this).data()[0]).attr('id');
                    var buttonId = "btn-buy-" + label;

                    this.child(
                        "<form>" +
                            "<div class='form-group'>" +
                                "<label for='model-buy-amount'>Amount:</label>" +
                                "<input type='number' min='0' class='form-control' id='buy-amount'>" +
                                "<button id='btn-buy-stock' type='submit' class='btn btn-default'>Buy</button>" +
                            "</div>" +
                        "</form>" +
                        "<div id='show-total-cost'>" +
                        "</div>"
                        );
                });



                $('#stock-table tbody').on('click', 'td.buy-control', function () {
                    var child = table.row(this).child;
                    if (child.isShown()) {
                        child.hide();
                    }
                    else {
                        table.rows().eq(0).each(function (idx) {
                            var row = table.row(idx);

                            if (row.child.isShown()) {
                                row.child.hide();
                            }
                        });
                        child.show();

                        var btnBuyEvent = $._data($('#btn-buy-stock').get(0), "events");
                        var quantity = $('#buy-amount').val();

                        var label = $(table.row(this).data()[0]).attr('id');
                        if (btnBuyEvent == null) {
                            $('#btn-buy-stock').on('click', function () {
                                quantity = $('#buy-amount').val();
                                var query = "../api/StockTransactions/PostBuyingStockTransaction/?label=" + label + "&quantity=" + quantity;

                                $.ajax({
                                    type: "POST",   
                                    url: query,
                                    async: true,
                                    dataType: "json",
                                    success: function (data, textStatus, jqXHR) {
                                        console.log(data);
                                        console.log(textStatus);
                                        console.log(jqXHR);

                                        alert(data.quantity + " of the stock: " + data.label + " has been placed in your pending stocks!");
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        console.log(data);
                                        console.log(textStatus);
                                        console.log(errorThrown);
                                        alert(jqXHR.responseText);

                                    }
                                });
                            });
                        }

                        var buyAmountEvent = $._data($('#buy-amount').get(0), "events");
                        if (buyAmountEvent == null) {
                            $('#buy-amount')
                                .on('input',
                                    function () {
                                        var lastTradePrice = $(this).closest('tr').prev().find('.last-trade-price').text();
                                        $('#show-total-cost').html('<p>' + (lastTradePrice * $('#buy-amount').val() + ' kr</p>'));
                                    });
                        }
                    }
                });
            });
    </script>
}